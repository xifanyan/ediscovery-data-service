### getApplications
GET http://localhost:8080/getApplications
USER: pyan:__role2__

### getRnaApplications
GET http://localhost:8080/getRnaApplications
USER: pyan:__casemanager__

### getEngines
GET http://localhost:8080/getEngines?application=documentHold.demo00001
USER: pyan:__casemanager__

### getDataSourceTemplates
GET http://localhost:8080/getDataSourceTemplates
USER: pyan:__casemanager__

### getTemplates
GET http://localhost:8080/getTemplates?entityType=documentHold
USER: pyan:__role2__

### getCustodians
GET http://localhost:8080/getCustodians?application=documentHold.demo00001
USER: pyan:__casemanager__

### submitFtpIngestionData
POST http://localhost:8080/submitFtpIngestionData?application=documentHold.demo00001&engine=singleMindServer.demo00001&dataSource=ftp_demo_01&dataSourceTemplate=_DS_FTP_Template&custodian=democust&ftpPath=dstest
USER: pyan:__casemanager__

### submitFileIngestionData
POST http://localhost:8080/submitFileIngestionData?application=documentHold.demo00001&engine=singleMindServer.demo00001&dataSource=file_demo_01&dataSourceTemplate=_Disney_Template_v1&custodian=democust&filePath=E%3A%5CInstallation%5CDatasource%5CTest_Folder
USER: pyan:__casemanager__

### submitTagger
POST http://localhost:8080/submitTagger?application=axcelerate.RH_ECA4_RH_Matter1&id=tagdemo1&globalSearch=all_plain_text_files&termTaxonomy=meta_bcc&typeTaxonomy=meta_cc
USER: pyan:__casemanager__

### importUsersAndGroups
POST http://localhost:8080/importUsersAndGroups
USER: pyan:__casemanager__
Content-Type: multipart/form-data; boundary=----WebKitFormBoundary7MA4YWxkTrZu0gW

usersAndGroups
------WebKitFormBoundary7MA4YWxkTrZu0gW
Content-Disposition: form-data; name="usersAndGroups"; filename="usersAndGroups.xlsx"
Content-Type: application/octet-stream

< c:\Users\pyan\Downloads\usersAndGroups.xlsx
------WebKitFormBoundary7MA4YWxkTrZu0gW--

### getGlobalSavedSearches
GET http://localhost:8080/getGlobalSearches
USER: pyan:__casemanager__

### createGlobalSearches
POST http://localhost:8080/createGlobalSearches
USER: pyan:__casemanager__
content-type: application/json

[
    {
        "displayName" : "abc",
        "queries": [
            "1234",
            "hello",
            "world"
        ]
    }
]

### updateGlobalSearches
POST http://localhost:8080/updateGlobalSearches
USER: pyan:__casemanager__
content-type: application/json

[
    {
        "id" : "savedSearch.abc",
        "queries": [
            "4321",
            "hello",
            "people"
        ]
    }
]


### getFieldProperties
GET http://localhost:8080/getFieldProperties?application=axcelerate.RH_ECA4_RH_Matter1
USER: pyan:__casemanager__

### getTaxonomies
GET http://localhost:8080/getTaxonomies?application=axcelerate.RH_ECA4_RH_Matter1
USER: pyan:__casemanager__

### importGlobalSearchesAndTaggers
POST http://localhost:8080/importGlobalSearchesAndTaggers
USER: pyan:__casemanager__
Content-Type: multipart/form-data; boundary=----WebKitFormBoundary7MA4YWxkTrZu0gW

globalSearchesAndTaggers
------WebKitFormBoundary7MA4YWxkTrZu0gW
Content-Disposition: form-data; name="globalSearchesAndTaggers"; filename="globalSearchesAndTaggers.xlsx"
Content-Type: application/octet-stream

< c:\Users\pyan\Downloads\globalSearchesAndTaggers.xlsx
------WebKitFormBoundary7MA4YWxkTrZu0gW--

### getRedactionReasons
GET http://localhost:8080/getRedactionReasons?application=axcelerate.RH_ECA4_RH_Matter1
USER: pyan:__casemanager__

### addRedactionReasons
POST http://localhost:8080/addRedactionReason?application=axcelerate.RH_ECA4_RH_Matter1&redactionReason=FORTEST
USER: pyan:__casemanager__

### addCustodian
POST http://localhost:8080/addCustodian?application=documentHold.demo00001&custodian=cust10
USER: pyan:__casemanager__

### getWorkspaces
GET http://localhost:8080/getWorkspaces
USER: pyan:__casemanager__

### getHosts
GET http://localhost:8080/getHosts
USER: pyan:__casemanager__

### create ECA application
POST http://localhost:8080/createApplication?applicationType=documentHold&applicationName=NewIngestionApp&template=documentHold._Disney_Template_v1&workspace=Workspace1&host=vm-rhauswirth2.otxlab.net&dropTemplate=true&startApplication=true
USER: pyan:__casemanager__

### create RNA application
POST http://localhost:8080/createApplication?applicationType=axcelerateStandalone&applicationName=NewReviewApp&template=axcelerate._DEMO_Review_Template&workspace=Workspace1&host=vm-rhauswirth2.otxlab.net&startApplication=true
USER: pyan:__casemanager__

//
// Examples: /entity/:entityType?workspace=[Workspace Name]&globalTemplate=[true/false]&security=[true/false]
// Notes:
//   1. security is true by default, have to explicitly set to false to disable.
//   2. globalTemplate is false by default.
//   3. if workspace is empty, then load from all workspaces.
//

### 1: get global templates of documentHold from all.
GET http://localhost:8080/entity/documentHold?security=false&globalTemplate=true
USER: pyan:__casemanager__

### 2: get documentHolds the user has access from Workspace1.
GET http://localhost:8080/entity/documentHold?workspace=Workspace1
USER: pyan:__casemanager__

### 3: get all documentHolds (security needs to be set to false explicitly).
GET http://localhost:8080/entity/documentHold?security=false
USER: pyan:__casemanager__

### 4: get all documentHolds (security needs to be set to false explicitly).
GET http://localhost:8080/entity/dataSource?security=false&globalTemplate=true
USER: pyan:__casemanager__

###
### User Group Management Section
###

### users
GET http://localhost:8080/users
USER: pyan:__casemanager__

### users by ID
GET http://localhost:8080/users/demouser1
USER: pyan:__casemanager__

### groups 
GET http://localhost:8080/groups
USER: pyan:__casemanager__

### group by ID
GET http://localhost:8080/groups/demogroup1
USER: pyan:__casemanager__

### users under speicifc group
GET http://localhost:8080/groups/demogroup1/users
USER: pyan:__casemanager__

### groups associated with a specific user
GET http://localhost:8080/users/demouser2/groups
USER: pyan:__casemanager__

### add users
POST http://localhost:8080/users
USER: pyan:__casemanager__
content-type: application/json

[
    {
        "User name": "demouser4",
        "Password": "demous3r4",
        "External user": true,
        "Enabled": true
    }
]

### add groups 
POST http://localhost:8080/groups
USER: pyan:__casemanager__
content-type: application/json

[
    {
        "Group name": "demogroup4",
        "Enabled": true
    }
]

### add users to group
POST http://localhost:8080/group/demogroup1/users
USER: pyan:__casemanager__
content-type: application/json

[
    "demouser1",
    "demouser2",
    "demouser3"
]

### add groups to application
POST http://localhost:8080/application/documentHold.demo00001/groups
USER: pyan:__casemanager__
content-type: application/json

[
    "demogroup3"
]

### users and groups by application
GET http://localhost:8080/application/documentHold.demo00001/usersAndGroups
USER: pyan:__casemanager__
content-type: application/json

